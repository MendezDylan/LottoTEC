/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Estructuras.PriorityQueue;
import Estructuras.DoublyLinkedList;
import GestionarUsuario.Tiquete;
import GestionarUsuario.Usuario;
import GestionarUsuario.SorteosFuturos;
import java.awt.Color;
import java.util.GregorianCalendar;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import org.joda.time.DateTimeComparator;

/**
 *
 * @author Dylan
 */
public class PantallaPrincipal extends javax.swing.JFrame {

    /**DoublyLinkedL
     * Creates new form PrincipalGUI
     */
    //Aqui se crear los atributos necesarios para el funcionamiento de todo el programa.
    DoublyLinkedList<Usuario> listaDeUsuarios;
    PriorityQueue<Tiquete> listaDeTiquetesSinEnviar;
    PriorityQueue<Tiquete> listaDeTiquetesEnviados;
    PriorityQueue<SorteosFuturos> listaDeSorteosPendientes;
    
    GregorianCalendar fechaDelSistema;

    public PantallaPrincipal() {
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PantallaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(PantallaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(PantallaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(PantallaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.listaDeUsuarios=new DoublyLinkedList<>();
        this.listaDeTiquetesSinEnviar=new PriorityQueue<>();
        this.listaDeSorteosPendientes=new PriorityQueue<>();
        this.listaDeTiquetesEnviados=new PriorityQueue<>();
        initComponents();
        this.getContentPane().setBackground(Color.WHITE);
        this.fechaDelSistema=new GregorianCalendar();
        labelFecha.setText(fechaDelSistema.getDisplayName(7, 2, Locale.ENGLISH)+", "+fechaDelSistema.get(5)+"-"+fechaDelSistema.getDisplayName(2, 2, Locale.ENGLISH)+"-"+fechaDelSistema.get(1));
    }

    public GregorianCalendar getFechaDelSistema() {
        return fechaDelSistema;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonComprarTiquete = new javax.swing.JButton();
        botonRegistrarUsuario = new javax.swing.JButton();
        labelFecha = new javax.swing.JLabel();
        botonAvanzarDia = new javax.swing.JButton();
        botonGestionSorteos = new javax.swing.JButton();
        botonAtenderPedidos = new javax.swing.JButton();
        botonRealizarSorteo = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        botonComprarTiquete.setText("Comprar tiquetes");
        botonComprarTiquete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonComprarTiqueteActionPerformed(evt);
            }
        });

        botonRegistrarUsuario.setText("Registrar usuario");
        botonRegistrarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegistrarUsuarioActionPerformed(evt);
            }
        });

        labelFecha.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelFecha.setText("FECHA");

        botonAvanzarDia.setText("Siguiente dia");
        botonAvanzarDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAvanzarDiaActionPerformed(evt);
            }
        });

        botonGestionSorteos.setText("Gestion de sorteos");
        botonGestionSorteos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGestionSorteosActionPerformed(evt);
            }
        });

        botonAtenderPedidos.setText("Atender pedidos");
        botonAtenderPedidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAtenderPedidosActionPerformed(evt);
            }
        });

        botonRealizarSorteo.setText("Realizar sorteo");
        botonRealizarSorteo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRealizarSorteoActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logoPeq.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(343, 343, 343)
                        .addComponent(jLabel2)
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(labelFecha))
                            .addComponent(botonAvanzarDia, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(botonRegistrarUsuario)
                        .addGap(18, 18, 18)
                        .addComponent(botonGestionSorteos)
                        .addGap(18, 18, 18)
                        .addComponent(botonComprarTiquete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonAtenderPedidos)
                        .addGap(18, 18, 18)
                        .addComponent(botonRealizarSorteo, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(112, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {botonAtenderPedidos, botonComprarTiquete, botonGestionSorteos, botonRegistrarUsuario});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelFecha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonAvanzarDia)))
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonRegistrarUsuario)
                    .addComponent(botonGestionSorteos)
                    .addComponent(botonComprarTiquete)
                    .addComponent(botonAtenderPedidos)
                    .addComponent(botonRealizarSorteo, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(234, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {botonAtenderPedidos, botonComprarTiquete, botonGestionSorteos, botonRealizarSorteo, botonRegistrarUsuario});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonComprarTiqueteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonComprarTiqueteActionPerformed
        // TODO add your handling code here:
        if (listaDeUsuarios.getSize()==0){
            JOptionPane.showMessageDialog(null, "Error, para comprar un tiquete debe haber al menos un usuario registrado.");
        }else{
            new ComprarTiquete(this, rootPaneCheckingEnabled, listaDeUsuarios, listaDeTiquetesSinEnviar, listaDeSorteosPendientes, fechaDelSistema).setVisible(true);
        }
    }//GEN-LAST:event_botonComprarTiqueteActionPerformed

    private void botonRegistrarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegistrarUsuarioActionPerformed
        // TODO add your handling code here:
        new CrearUsuario(this, rootPaneCheckingEnabled, listaDeUsuarios).setVisible(true);
    }//GEN-LAST:event_botonRegistrarUsuarioActionPerformed

    private void botonAvanzarDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAvanzarDiaActionPerformed
        // TODO add your handling code here:
        //GregorianCalendar atributos. [0]=dia semana   [1]=anno    [2]=mes   [5]dia
        if(listaDeTiquetesEnviados.getSize()==0 && listaDeTiquetesSinEnviar.getSize()!=0){
            if ((DateTimeComparator.getDateOnlyInstance().compare(listaDeTiquetesSinEnviar.getHead().getNextNode().getElement().getSorteo().getFechaSorteo(), fechaDelSistema))==1){
                int dia=this.fechaDelSistema.get(5);
                fechaDelSistema.set(5, dia+1);
                labelFecha.setText(fechaDelSistema.getDisplayName(7, 2, Locale.ENGLISH)+", "+fechaDelSistema.get(5)+"-"+fechaDelSistema.getDisplayName(2, 2, Locale.ENGLISH)+"-"+fechaDelSistema.get(1));            
            }else{
                JOptionPane.showMessageDialog(this, "No puede avanzar al siguiente dia porque hay sorteos pendientes hoy.");
            }
        }else if(listaDeTiquetesEnviados.getSize()!=0 && listaDeTiquetesSinEnviar.getSize()==0){
            if (DateTimeComparator.getDateOnlyInstance().compare(listaDeTiquetesEnviados.getHead().getNextNode().getElement().getSorteo().getFechaSorteo(), fechaDelSistema)==1){
                int dia=this.fechaDelSistema.get(5);
                fechaDelSistema.set(5, dia+1);
                labelFecha.setText(fechaDelSistema.getDisplayName(7, 2, Locale.ENGLISH)+", "+fechaDelSistema.get(5)+"-"+fechaDelSistema.getDisplayName(2, 2, Locale.ENGLISH)+"-"+fechaDelSistema.get(1));            
            }else{
                JOptionPane.showMessageDialog(this, "No puede avanzar al siguiente dia porque hay sorteos pendientes hoy.");
            }
        }else if(listaDeTiquetesEnviados.getSize()!=0 && listaDeTiquetesSinEnviar.getSize()!=0){
            if (DateTimeComparator.getDateOnlyInstance().compare(listaDeTiquetesEnviados.getHead().getNextNode().getElement().getSorteo().getFechaSorteo(), fechaDelSistema)==1 && 
                    DateTimeComparator.getDateOnlyInstance().compare(listaDeTiquetesSinEnviar.getHead().getNextNode().getElement().getSorteo().getFechaSorteo(), fechaDelSistema)==1){
                int dia=this.fechaDelSistema.get(5);
                fechaDelSistema.set(5, dia+1);
                labelFecha.setText(fechaDelSistema.getDisplayName(7, 2, Locale.ENGLISH)+", "+fechaDelSistema.get(5)+"-"+fechaDelSistema.getDisplayName(2, 2, Locale.ENGLISH)+"-"+fechaDelSistema.get(1));            
            }else{
                JOptionPane.showMessageDialog(this, "No puede avanzar al siguiente dia porque hay sorteos pendientes hoy.");
            }   
        }else{
                int dia=this.fechaDelSistema.get(5);
                fechaDelSistema.set(5, dia+1);
                labelFecha.setText(fechaDelSistema.getDisplayName(7, 2, Locale.ENGLISH)+", "+fechaDelSistema.get(5)+"-"+fechaDelSistema.getDisplayName(2, 2, Locale.ENGLISH)+"-"+fechaDelSistema.get(1));
        }
    }//GEN-LAST:event_botonAvanzarDiaActionPerformed

    private void botonGestionSorteosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGestionSorteosActionPerformed
        // TODO add your handling code here:
        new GestionDeSorteos(this, rootPaneCheckingEnabled, listaDeSorteosPendientes, fechaDelSistema).setVisible(true);
    }//GEN-LAST:event_botonGestionSorteosActionPerformed

    private void botonAtenderPedidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAtenderPedidosActionPerformed
        // TODO add your handling code here:
        new AtenderPedidos(this, rootPaneCheckingEnabled, listaDeTiquetesSinEnviar, listaDeTiquetesEnviados, fechaDelSistema).setVisible(true);
    }//GEN-LAST:event_botonAtenderPedidosActionPerformed

    private void botonRealizarSorteoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRealizarSorteoActionPerformed
        // TODO add your handling code here:
        if(false){
            JOptionPane.showMessageDialog(this, "No se pueden realizar sorteos porque hay tiquetes pendientes de enviar a usuarios.");
        }else{
            new RealizarSorteo(this, rootPaneCheckingEnabled, listaDeTiquetesEnviados, listaDeSorteosPendientes, fechaDelSistema).setVisible(rootPaneCheckingEnabled);
        }
    }//GEN-LAST:event_botonRealizarSorteoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PantallaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAtenderPedidos;
    private javax.swing.JButton botonAvanzarDia;
    private javax.swing.JButton botonComprarTiquete;
    private javax.swing.JButton botonGestionSorteos;
    private javax.swing.JButton botonRealizarSorteo;
    private javax.swing.JButton botonRegistrarUsuario;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel labelFecha;
    // End of variables declaration//GEN-END:variables
}
